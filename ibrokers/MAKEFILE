# Variables
APP_NAME := tour
DOCKER_COMPOSE_FILE := docker-compose.yml
GOLANGCI_LINT_VERSION := v1.52.2

# Go application settings
GO_FILES := $(shell find . -type f -name '*.go')
BUILD_DIR := ./bin
BINARY_NAME := $(BUILD_DIR)/$(APP_NAME)

# Docker settings
DOCKER_IMAGE := $(APP_NAME):latest

# Default target
.DEFAULT_GOAL := help

# Targets

##@ Go Application

build: ## Build the Go application
	@echo "Building the Go application..."
	@mkdir -p $(BUILD_DIR)
	@go build -o $(BINARY_NAME) ./main.go

run: build ## Run the Go application
	@echo "Running the Go application..."
	@$(BINARY_NAME)

test: ## Run tests for the Go application
	@echo "Running tests..."
	@go test ./... -v

lint: ## Run golangci-lint on the Go codebase
	@echo "Running linter..."
	@curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s $(GOLANGCI_LINT_VERSION)
	@./bin/golangci-lint run

clean: ## Clean the built files
	@echo "Cleaning build directory..."
	@rm -rf $(BUILD_DIR)

##@ Docker

docker-build: ## Build the Docker image for the application
	@echo "Building Docker image..."
	@docker build -t $(DOCKER_IMAGE) .

docker-run: ## Run the application using Docker
	@echo "Running Docker container..."
	@docker run -p 8080:8080 $(DOCKER_IMAGE)

docker-compose-up: ## Start the entire Docker Compose stack
	@echo "Starting Docker Compose stack..."
	@docker-compose -f $(DOCKER_COMPOSE_FILE) up --build -d

docker-compose-down: ## Stop and remove Docker Compose services
	@echo "Stopping Docker Compose stack..."
	@docker-compose -f $(DOCKER_COMPOSE_FILE) down

docker-clean: ## Remove all stopped containers, unused images, and volumes
	@echo "Cleaning up Docker containers and images..."
	@docker system prune -f
	@docker volume prune -f

logs: ## View logs of the Docker Compose stack
	@echo "Displaying logs..."
	@docker-compose -f $(DOCKER_COMPOSE_FILE) logs -f

##@ Miscellaneous

help: ## Show this help message
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

.PHONY: build run test lint clean docker-build docker-run docker-compose-up docker-compose-down docker-clean logs help
