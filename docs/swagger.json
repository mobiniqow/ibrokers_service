{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/broker/api/v1/": {
            "get": {
                "description": "Get all brokers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "List of brokers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by age",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/broker.BrokerResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new broker with the provided information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "Create broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Broker age",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Broker image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/broker.BrokerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        },
        "/broker/api/v1/{id}": {
            "get": {
                "description": "Retrieve details of a broker by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "Get broker details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broker.BrokerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Broker not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update broker details by ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "Update broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Broker name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Broker age",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Broker image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broker.BrokerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Broker not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a broker by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "Delete broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Broker not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update specific fields of a city by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "broker"
                ],
                "summary": "Update city partially",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Broker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial Broker information",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/broker.CreateBrokerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/broker.BrokerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "broker not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        },
        "/buy_method/api/v1/": {
            "get": {
                "description": "Get all buymethods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "List of buymethods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by age",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/buy_method.BuyMethodResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new buymethod with the provided information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "Create buymethod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuyMethod name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "BuyMethod age",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "BuyMethod image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/buy_method.BuyMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        },
        "/buy_method/api/v1/{id}": {
            "get": {
                "description": "Retrieve details of a buymethod by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "Get buymethod details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuyMethod ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buy_method.BuyMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "BuyMethod not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update buymethod details by ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "Update buymethod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuyMethod ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BuyMethod name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "BuyMethod age",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "BuyMethod image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buy_method.BuyMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "BuyMethod not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a buymethod by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "Delete buymethod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuyMethod ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "BuyMethod not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update specific fields of a city by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buymethod"
                ],
                "summary": "Update city partially",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuyMethod ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial BuyMethod information",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buy_method.CreateBuyMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buy_method.BuyMethodResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "buymethod not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        },
        "/offer/api/v1/": {
            "get": {
                "description": "Get all offers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "List of offers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by age",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/offer.OfferResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new offer with the provided information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "Create offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offer age",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Offer image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/offer.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        },
        "/offer/api/v1/{id}": {
            "get": {
                "description": "Retrieve details of a offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "Get offer details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/offer.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update offer details by ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "Update offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Offer name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Offer age",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Offer image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/offer.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "Delete offer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update specific fields of a city by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offer"
                ],
                "summary": "Update city partially",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial Offer information",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/offer.CreateOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/offer.OfferResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "404": {
                        "description": "offer not found",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/basics.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "basics.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "broker.BrokerResponse": {
            "type": "object",
            "properties": {
                "derivativesId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nationalId": {
                    "type": "string"
                },
                "persianName": {
                    "type": "string"
                },
                "spotId": {
                    "type": "integer"
                }
            }
        },
        "broker.CreateBrokerRequest": {
            "type": "object",
            "properties": {
                "derivativesId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nationalId": {
                    "type": "string"
                },
                "persianName": {
                    "type": "string"
                },
                "spotId": {
                    "type": "integer"
                }
            }
        },
        "buy_method.BuyMethodResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "persianName": {
                    "type": "string"
                }
            }
        },
        "buy_method.CreateBuyMethodRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "persianName": {
                    "type": "string"
                }
            }
        },
        "offer.CreateOfferRequest": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer"
                },
                "buyMethodId": {
                    "type": "integer"
                },
                "commodityId": {
                    "type": "integer"
                },
                "contractTypeId": {
                    "type": "integer"
                },
                "currencyId": {
                    "type": "integer"
                },
                "deliveryPlaceId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "initPrice": {
                    "type": "integer"
                },
                "initVolume": {
                    "type": "string"
                },
                "lotSize": {
                    "type": "integer"
                },
                "manufacturerId": {
                    "type": "integer"
                },
                "maxIncOfferVol": {
                    "type": "integer"
                },
                "maxInitPrice": {
                    "type": "integer"
                },
                "maxOfferPrice": {
                    "type": "integer"
                },
                "maxOrderVol": {
                    "type": "integer"
                },
                "measureUnitId": {
                    "type": "integer"
                },
                "minAllocationVol": {
                    "type": "integer"
                },
                "minInitPrice": {
                    "type": "integer"
                },
                "minOfferPrice": {
                    "type": "integer"
                },
                "minOfferVol": {
                    "type": "integer"
                },
                "minOrderVol": {
                    "type": "integer"
                },
                "offerModeId": {
                    "type": "integer"
                },
                "offerRing": {
                    "type": "string"
                },
                "offerSymbol": {
                    "type": "string"
                },
                "offerTypeId": {
                    "type": "integer"
                },
                "offerVol": {
                    "type": "integer"
                },
                "packagingTypeId": {
                    "type": "integer"
                },
                "permissibleError": {
                    "type": "integer"
                },
                "prepaymentPercent": {
                    "type": "integer"
                },
                "priceDiscoveryMinOrderVol": {
                    "type": "integer"
                },
                "securityTypeId": {
                    "type": "integer"
                },
                "securityTypeNote": {
                    "type": "string"
                },
                "settlementTypeId": {
                    "type": "integer"
                },
                "supplierId": {
                    "type": "integer"
                },
                "tickSize": {
                    "type": "integer"
                },
                "tradeStatus": {
                    "type": "string"
                },
                "tradingHallId": {
                    "type": "integer"
                },
                "weightFactor": {
                    "type": "integer"
                }
            }
        },
        "offer.OfferResponse": {
            "type": "object",
            "properties": {
                "brokerId": {
                    "type": "integer"
                },
                "buyMethodId": {
                    "type": "integer"
                },
                "commodityId": {
                    "type": "integer"
                },
                "contractTypeId": {
                    "type": "integer"
                },
                "currencyId": {
                    "type": "integer"
                },
                "deliveryPlaceId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "initPrice": {
                    "type": "integer"
                },
                "initVolume": {
                    "type": "string"
                },
                "lotSize": {
                    "type": "integer"
                },
                "manufacturerId": {
                    "type": "integer"
                },
                "maxIncOfferVol": {
                    "type": "integer"
                },
                "maxInitPrice": {
                    "type": "integer"
                },
                "maxOfferPrice": {
                    "type": "integer"
                },
                "maxOrderVol": {
                    "type": "integer"
                },
                "measureUnitId": {
                    "type": "integer"
                },
                "minAllocationVol": {
                    "type": "integer"
                },
                "minInitPrice": {
                    "type": "integer"
                },
                "minOfferPrice": {
                    "type": "integer"
                },
                "minOfferVol": {
                    "type": "integer"
                },
                "minOrderVol": {
                    "type": "integer"
                },
                "offerModeId": {
                    "type": "integer"
                },
                "offerRing": {
                    "type": "string"
                },
                "offerSymbol": {
                    "type": "string"
                },
                "offerTypeId": {
                    "type": "integer"
                },
                "offerVol": {
                    "type": "integer"
                },
                "packagingTypeId": {
                    "type": "integer"
                },
                "permissibleError": {
                    "type": "integer"
                },
                "prepaymentPercent": {
                    "type": "integer"
                },
                "priceDiscoveryMinOrderVol": {
                    "type": "integer"
                },
                "securityTypeId": {
                    "type": "integer"
                },
                "securityTypeNote": {
                    "type": "string"
                },
                "settlementTypeId": {
                    "type": "integer"
                },
                "supplierId": {
                    "type": "integer"
                },
                "tickSize": {
                    "type": "integer"
                },
                "tradeStatus": {
                    "type": "string"
                },
                "tradingHallId": {
                    "type": "integer"
                },
                "weightFactor": {
                    "type": "integer"
                }
            }
        }
    }
}