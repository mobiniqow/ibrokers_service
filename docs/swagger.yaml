definitions:
  basics.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  broker.BrokerResponse:
    properties:
      derivativesId:
        type: integer
      description:
        type: string
      id:
        type: integer
      nationalId:
        type: string
      persianName:
        type: string
      spotId:
        type: integer
    type: object
  broker.CreateBrokerRequest:
    properties:
      derivativesId:
        type: integer
      description:
        type: string
      id:
        type: integer
      nationalId:
        type: string
      persianName:
        type: string
      spotId:
        type: integer
    type: object
  buy_method.BuyMethodResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      persianName:
        type: string
    type: object
  buy_method.CreateBuyMethodRequest:
    properties:
      description:
        type: string
      id:
        type: integer
      persianName:
        type: string
    type: object
  offer.CreateOfferRequest:
    properties:
      brokerId:
        type: integer
      buyMethodId:
        type: integer
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      deliveryPlaceId:
        type: integer
      description:
        type: string
      id:
        type: integer
      initPrice:
        type: integer
      initVolume:
        type: string
      lotSize:
        type: integer
      manufacturerId:
        type: integer
      maxIncOfferVol:
        type: integer
      maxInitPrice:
        type: integer
      maxOfferPrice:
        type: integer
      maxOrderVol:
        type: integer
      measureUnitId:
        type: integer
      minAllocationVol:
        type: integer
      minInitPrice:
        type: integer
      minOfferPrice:
        type: integer
      minOfferVol:
        type: integer
      minOrderVol:
        type: integer
      offerModeId:
        type: integer
      offerRing:
        type: string
      offerSymbol:
        type: string
      offerTypeId:
        type: integer
      offerVol:
        type: integer
      packagingTypeId:
        type: integer
      permissibleError:
        type: integer
      prepaymentPercent:
        type: integer
      priceDiscoveryMinOrderVol:
        type: integer
      securityTypeId:
        type: integer
      securityTypeNote:
        type: string
      settlementTypeId:
        type: integer
      supplierId:
        type: integer
      tickSize:
        type: integer
      tradeStatus:
        type: string
      tradingHallId:
        type: integer
      weightFactor:
        type: integer
    type: object
  offer.OfferResponse:
    properties:
      brokerId:
        type: integer
      buyMethodId:
        type: integer
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      deliveryPlaceId:
        type: integer
      description:
        type: string
      id:
        type: integer
      initPrice:
        type: integer
      initVolume:
        type: string
      lotSize:
        type: integer
      manufacturerId:
        type: integer
      maxIncOfferVol:
        type: integer
      maxInitPrice:
        type: integer
      maxOfferPrice:
        type: integer
      maxOrderVol:
        type: integer
      measureUnitId:
        type: integer
      minAllocationVol:
        type: integer
      minInitPrice:
        type: integer
      minOfferPrice:
        type: integer
      minOfferVol:
        type: integer
      minOrderVol:
        type: integer
      offerModeId:
        type: integer
      offerRing:
        type: string
      offerSymbol:
        type: string
      offerTypeId:
        type: integer
      offerVol:
        type: integer
      packagingTypeId:
        type: integer
      permissibleError:
        type: integer
      prepaymentPercent:
        type: integer
      priceDiscoveryMinOrderVol:
        type: integer
      securityTypeId:
        type: integer
      securityTypeNote:
        type: string
      settlementTypeId:
        type: integer
      supplierId:
        type: integer
      tickSize:
        type: integer
      tradeStatus:
        type: string
      tradingHallId:
        type: integer
      weightFactor:
        type: integer
    type: object
info:
  contact: {}
paths:
  /broker/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all brokers
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/broker.BrokerResponse'
            type: array
      summary: List of brokers
      tags:
      - broker
    post:
      consumes:
      - multipart/form-data
      description: Create a new broker with the provided information
      parameters:
      - description: Broker name
        in: formData
        name: name
        required: true
        type: string
      - description: Broker age
        in: formData
        name: age
        required: true
        type: integer
      - description: Broker image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create broker
      tags:
      - broker
  /broker/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a broker by its ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete broker
      tags:
      - broker
    get:
      consumes:
      - application/json
      description: Retrieve details of a broker by its ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get broker details
      tags:
      - broker
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Broker information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/broker.CreateBrokerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - broker
    put:
      consumes:
      - multipart/form-data
      description: Update broker details by ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      - description: Broker name
        in: formData
        name: name
        type: string
      - description: Broker age
        in: formData
        name: age
        type: integer
      - description: Broker image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update broker
      tags:
      - broker
  /buy_method/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all buymethods
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/buy_method.BuyMethodResponse'
            type: array
      summary: List of buymethods
      tags:
      - buymethod
    post:
      consumes:
      - multipart/form-data
      description: Create a new buymethod with the provided information
      parameters:
      - description: BuyMethod name
        in: formData
        name: name
        required: true
        type: string
      - description: BuyMethod age
        in: formData
        name: age
        required: true
        type: integer
      - description: BuyMethod image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create buymethod
      tags:
      - buymethod
  /buy_method/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a buymethod by its ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete buymethod
      tags:
      - buymethod
    get:
      consumes:
      - application/json
      description: Retrieve details of a buymethod by its ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get buymethod details
      tags:
      - buymethod
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial BuyMethod information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/buy_method.CreateBuyMethodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: buymethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - buymethod
    put:
      consumes:
      - multipart/form-data
      description: Update buymethod details by ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      - description: BuyMethod name
        in: formData
        name: name
        type: string
      - description: BuyMethod age
        in: formData
        name: age
        type: integer
      - description: BuyMethod image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update buymethod
      tags:
      - buymethod
  /offer/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all offers
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/offer.OfferResponse'
            type: array
      summary: List of offers
      tags:
      - offer
    post:
      consumes:
      - multipart/form-data
      description: Create a new offer with the provided information
      parameters:
      - description: Offer name
        in: formData
        name: name
        required: true
        type: string
      - description: Offer age
        in: formData
        name: age
        required: true
        type: integer
      - description: Offer image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create offer
      tags:
      - offer
  /offer/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a offer by its ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete offer
      tags:
      - offer
    get:
      consumes:
      - application/json
      description: Retrieve details of a offer by its ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get offer details
      tags:
      - offer
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Offer information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/offer.CreateOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - offer
    put:
      consumes:
      - multipart/form-data
      description: Update offer details by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      - description: Offer name
        in: formData
        name: name
        type: string
      - description: Offer age
        in: formData
        name: age
        type: integer
      - description: Offer image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update offer
      tags:
      - offer
swagger: "2.0"
