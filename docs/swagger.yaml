definitions:
  basics.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  broker.BrokerResponse:
    properties:
      derivativesId:
        type: integer
      id:
        type: integer
      spotId:
        type: integer
    type: object
  broker.CreateBrokerRequest:
    properties:
      derivativesId:
        type: integer
      id:
        type: integer
      spotId:
        type: integer
    type: object
  buy_method.BuyMethodResponse:
    properties:
      id:
        type: integer
    type: object
  buy_method.CreateBuyMethodRequest:
    properties:
      id:
        type: integer
    type: object
  commodity.CommodityResponse:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  commodity.CreateCommodityRequest:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  contract_type.ContractTypeResponse:
    properties:
      id:
        type: integer
    type: object
  contract_type.CreateContractTypeRequest:
    properties:
      id:
        type: integer
    type: object
  currency_unit.CreateCurrencyUnitRequest:
    properties:
      id:
        type: integer
    type: object
  currency_unit.CurrencyUnitResponse:
    properties:
      id:
        type: integer
    type: object
  delivery_place.CreateDeliveryPlaceRequest:
    properties:
      id:
        type: integer
    type: object
  delivery_place.DeliveryPlaceResponse:
    properties:
      id:
        type: integer
    type: object
  group.CreateGroupRequest:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  group.GroupResponse:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  group_hall.CreateGroupHallRequest:
    properties:
      group:
        type: integer
      hall:
        type: integer
      id:
        type: integer
    type: object
  group_hall.GroupHallResponse:
    properties:
      group:
        type: integer
      hall:
        type: integer
      id:
        type: integer
    type: object
  hall_menu_group.CreateHallMenuGroupRequest:
    properties:
      id:
        type: integer
    type: object
  hall_menu_group.HallMenuGroupResponse:
    properties:
      id:
        type: integer
    type: object
  hall_menu_sub_group.CreateHallMenuSubGroupRequest:
    properties:
      group:
        type: integer
      id:
        type: integer
    type: object
  hall_menu_sub_group.HallMenuSubGroupResponse:
    properties:
      group:
        type: integer
      id:
        type: integer
    type: object
  main_group.CreateMainGroupRequest:
    properties:
      id:
        type: integer
    type: object
  main_group.MainGroupResponse:
    properties:
      id:
        type: integer
    type: object
  manufacturers.CreateManufacturersRequest:
    properties:
      id:
        type: integer
    type: object
  manufacturers.ManufacturersResponse:
    properties:
      id:
        type: integer
    type: object
  measure_unit.CreateMeasureUnitRequest:
    properties:
      id:
        type: integer
    type: object
  measure_unit.MeasureUnitResponse:
    properties:
      id:
        type: integer
    type: object
  offer.CreateOfferRequest:
    properties:
      brokerId:
        type: integer
      buyMethodId:
        type: integer
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      deliveryPlaceId:
        type: integer
      id:
        type: integer
      initPrice:
        type: integer
      lotSize:
        type: integer
      manufacturerId:
        type: integer
      maxIncOfferVol:
        type: integer
      maxInitPrice:
        type: integer
      maxOfferPrice:
        type: integer
      maxOrderVol:
        type: integer
      measureUnitId:
        type: integer
      minAllocationVol:
        type: integer
      minInitPrice:
        type: integer
      minOfferPrice:
        type: integer
      minOfferVol:
        type: integer
      minOrderVol:
        type: integer
      offerModeId:
        type: integer
      offerTypeId:
        type: integer
      offerVol:
        type: integer
      packagingTypeId:
        type: integer
      permissibleError:
        type: integer
      prepaymentPercent:
        type: integer
      priceDiscoveryMinOrderVol:
        type: integer
      securityTypeId:
        type: integer
      settlementTypeId:
        type: integer
      supplierId:
        type: integer
      tickSize:
        type: integer
      tradingHallId:
        type: integer
      weightFactor:
        type: integer
    type: object
  offer.OfferResponse:
    properties:
      brokerId:
        type: integer
      buyMethodId:
        type: integer
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      deliveryPlaceId:
        type: integer
      id:
        type: integer
      initPrice:
        type: integer
      lotSize:
        type: integer
      manufacturerId:
        type: integer
      maxIncOfferVol:
        type: integer
      maxInitPrice:
        type: integer
      maxOfferPrice:
        type: integer
      maxOrderVol:
        type: integer
      measureUnitId:
        type: integer
      minAllocationVol:
        type: integer
      minInitPrice:
        type: integer
      minOfferPrice:
        type: integer
      minOfferVol:
        type: integer
      minOrderVol:
        type: integer
      offerModeId:
        type: integer
      offerTypeId:
        type: integer
      offerVol:
        type: integer
      packagingTypeId:
        type: integer
      permissibleError:
        type: integer
      prepaymentPercent:
        type: integer
      priceDiscoveryMinOrderVol:
        type: integer
      securityTypeId:
        type: integer
      settlementTypeId:
        type: integer
      supplierId:
        type: integer
      tickSize:
        type: integer
      tradingHallId:
        type: integer
      weightFactor:
        type: integer
    type: object
  offer_mod.CreateOfferModRequest:
    properties:
      id:
        type: integer
    type: object
  offer_mod.OfferModResponse:
    properties:
      id:
        type: integer
    type: object
  offer_type.CreateOfferTypeRequest:
    properties:
      id:
        type: integer
    type: object
  offer_type.OfferTypeResponse:
    properties:
      id:
        type: integer
    type: object
  packaging_type.CreatePackagingTypeRequest:
    properties:
      id:
        type: integer
    type: object
  packaging_type.PackagingTypeResponse:
    properties:
      id:
        type: integer
    type: object
  report.CreateReportRequest:
    properties:
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      finalWeightedAveragePrice:
        type: integer
      manufacturerId:
        type: integer
      maximumPrice:
        type: integer
      measurementUnitId:
        type: integer
      minimumPrice:
        type: integer
      offerBasePrice:
        type: integer
      offerId:
        type: integer
      sellerBrokerId:
        type: integer
      supplierId:
        type: integer
    type: object
  report.ReportResponse:
    properties:
      commodityId:
        type: integer
      contractTypeId:
        type: integer
      currencyId:
        type: integer
      finalWeightedAveragePrice:
        type: integer
      manufacturerId:
        type: integer
      maximumPrice:
        type: integer
      measurementUnitId:
        type: integer
      minimumPrice:
        type: integer
      offerBasePrice:
        type: integer
      offerId:
        type: integer
      sellerBrokerId:
        type: integer
      supplierId:
        type: integer
    type: object
  settlement.CreateSettlementRequest:
    properties:
      id:
        type: integer
    type: object
  settlement.SettlementResponse:
    properties:
      id:
        type: integer
    type: object
  sub_group.CreateSubGroupRequest:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  sub_group.SubGroupResponse:
    properties:
      id:
        type: integer
      parentId:
        type: integer
    type: object
  supplier.CreateSupplierRequest:
    properties:
      customerId:
        type: integer
      id:
        type: integer
    type: object
  supplier.SupplierResponse:
    properties:
      customerId:
        type: integer
      id:
        type: integer
    type: object
  trading_hall.CreateTradingHallRequest:
    properties:
      id:
        type: integer
    type: object
  trading_hall.TradingHallResponse:
    properties:
      id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /broker/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all brokers
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/broker.BrokerResponse'
            type: array
      summary: List of brokers
      tags:
      - broker
    post:
      consumes:
      - multipart/form-data
      description: Create a new broker with the provided information
      parameters:
      - description: Broker name
        in: formData
        name: name
        required: true
        type: string
      - description: Broker age
        in: formData
        name: age
        required: true
        type: integer
      - description: Broker image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create broker
      tags:
      - broker
  /broker/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a broker by its ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete broker
      tags:
      - broker
    get:
      consumes:
      - application/json
      description: Retrieve details of a broker by its ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get broker details
      tags:
      - broker
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Broker information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/broker.CreateBrokerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - broker
    put:
      consumes:
      - multipart/form-data
      description: Update broker details by ID
      parameters:
      - description: Broker ID
        in: path
        name: id
        required: true
        type: string
      - description: Broker name
        in: formData
        name: name
        type: string
      - description: Broker age
        in: formData
        name: age
        type: integer
      - description: Broker image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/broker.BrokerResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Broker not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update broker
      tags:
      - broker
  /buy_method/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all buymethods
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/buy_method.BuyMethodResponse'
            type: array
      summary: List of buymethods
      tags:
      - buymethod
    post:
      consumes:
      - multipart/form-data
      description: Create a new buymethod with the provided information
      parameters:
      - description: BuyMethod name
        in: formData
        name: name
        required: true
        type: string
      - description: BuyMethod age
        in: formData
        name: age
        required: true
        type: integer
      - description: BuyMethod image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create buymethod
      tags:
      - buymethod
  /buy_method/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a buymethod by its ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete buymethod
      tags:
      - buymethod
    get:
      consumes:
      - application/json
      description: Retrieve details of a buymethod by its ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get buymethod details
      tags:
      - buymethod
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial BuyMethod information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/buy_method.CreateBuyMethodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: buymethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - buymethod
    put:
      consumes:
      - multipart/form-data
      description: Update buymethod details by ID
      parameters:
      - description: BuyMethod ID
        in: path
        name: id
        required: true
        type: string
      - description: BuyMethod name
        in: formData
        name: name
        type: string
      - description: BuyMethod age
        in: formData
        name: age
        type: integer
      - description: BuyMethod image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buy_method.BuyMethodResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: BuyMethod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update buymethod
      tags:
      - buymethod
  /commodity/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all commoditys
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commodity.CommodityResponse'
            type: array
      summary: List of commoditys
      tags:
      - commodity
    post:
      consumes:
      - multipart/form-data
      description: Create a new commodity with the provided information
      parameters:
      - description: Commodity name
        in: formData
        name: name
        required: true
        type: string
      - description: Commodity age
        in: formData
        name: age
        required: true
        type: integer
      - description: Commodity image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/commodity.CommodityResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create commodity
      tags:
      - commodity
  /commodity/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a commodity by its ID
      parameters:
      - description: Commodity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Commodity not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete commodity
      tags:
      - commodity
    get:
      consumes:
      - application/json
      description: Retrieve details of a commodity by its ID
      parameters:
      - description: Commodity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commodity.CommodityResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Commodity not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get commodity details
      tags:
      - commodity
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Commodity ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Commodity information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/commodity.CreateCommodityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commodity.CommodityResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: commodity not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - commodity
    put:
      consumes:
      - multipart/form-data
      description: Update commodity details by ID
      parameters:
      - description: Commodity ID
        in: path
        name: id
        required: true
        type: string
      - description: Commodity name
        in: formData
        name: name
        type: string
      - description: Commodity age
        in: formData
        name: age
        type: integer
      - description: Commodity image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commodity.CommodityResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Commodity not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update commodity
      tags:
      - commodity
  /contract_type/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all contracttypes
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contract_type.ContractTypeResponse'
            type: array
      summary: List of contracttypes
      tags:
      - contracttype
    post:
      consumes:
      - multipart/form-data
      description: Create a new contracttype with the provided information
      parameters:
      - description: ContractType name
        in: formData
        name: name
        required: true
        type: string
      - description: ContractType age
        in: formData
        name: age
        required: true
        type: integer
      - description: ContractType image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/contract_type.ContractTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create contracttype
      tags:
      - contracttype
  /contract_type/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a contracttype by its ID
      parameters:
      - description: ContractType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: ContractType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete contracttype
      tags:
      - contracttype
    get:
      consumes:
      - application/json
      description: Retrieve details of a contracttype by its ID
      parameters:
      - description: ContractType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract_type.ContractTypeResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: ContractType not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get contracttype details
      tags:
      - contracttype
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: ContractType ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial ContractType information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/contract_type.CreateContractTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract_type.ContractTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: contracttype not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - contracttype
    put:
      consumes:
      - multipart/form-data
      description: Update contracttype details by ID
      parameters:
      - description: ContractType ID
        in: path
        name: id
        required: true
        type: string
      - description: ContractType name
        in: formData
        name: name
        type: string
      - description: ContractType age
        in: formData
        name: age
        type: integer
      - description: ContractType image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contract_type.ContractTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: ContractType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update contracttype
      tags:
      - contracttype
  /currency_unit/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all currencyunits
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/currency_unit.CurrencyUnitResponse'
            type: array
      summary: List of currencyunits
      tags:
      - currencyunit
    post:
      consumes:
      - multipart/form-data
      description: Create a new currencyunit with the provided information
      parameters:
      - description: CurrencyUnit name
        in: formData
        name: name
        required: true
        type: string
      - description: CurrencyUnit age
        in: formData
        name: age
        required: true
        type: integer
      - description: CurrencyUnit image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/currency_unit.CurrencyUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create currencyunit
      tags:
      - currencyunit
  /currency_unit/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a currencyunit by its ID
      parameters:
      - description: CurrencyUnit ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: CurrencyUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete currencyunit
      tags:
      - currencyunit
    get:
      consumes:
      - application/json
      description: Retrieve details of a currencyunit by its ID
      parameters:
      - description: CurrencyUnit ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_unit.CurrencyUnitResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: CurrencyUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get currencyunit details
      tags:
      - currencyunit
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: CurrencyUnit ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial CurrencyUnit information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/currency_unit.CreateCurrencyUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_unit.CurrencyUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: currencyunit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - currencyunit
    put:
      consumes:
      - multipart/form-data
      description: Update currencyunit details by ID
      parameters:
      - description: CurrencyUnit ID
        in: path
        name: id
        required: true
        type: string
      - description: CurrencyUnit name
        in: formData
        name: name
        type: string
      - description: CurrencyUnit age
        in: formData
        name: age
        type: integer
      - description: CurrencyUnit image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_unit.CurrencyUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: CurrencyUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update currencyunit
      tags:
      - currencyunit
  /delivery_place/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all deliveryplaces
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/delivery_place.DeliveryPlaceResponse'
            type: array
      summary: List of deliveryplaces
      tags:
      - deliveryplace
    post:
      consumes:
      - multipart/form-data
      description: Create a new deliveryplace with the provided information
      parameters:
      - description: DeliveryPlace name
        in: formData
        name: name
        required: true
        type: string
      - description: DeliveryPlace age
        in: formData
        name: age
        required: true
        type: integer
      - description: DeliveryPlace image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/delivery_place.DeliveryPlaceResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create deliveryplace
      tags:
      - deliveryplace
  /delivery_place/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a deliveryplace by its ID
      parameters:
      - description: DeliveryPlace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: DeliveryPlace not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete deliveryplace
      tags:
      - deliveryplace
    get:
      consumes:
      - application/json
      description: Retrieve details of a deliveryplace by its ID
      parameters:
      - description: DeliveryPlace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_place.DeliveryPlaceResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: DeliveryPlace not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get deliveryplace details
      tags:
      - deliveryplace
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: DeliveryPlace ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial DeliveryPlace information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/delivery_place.CreateDeliveryPlaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_place.DeliveryPlaceResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: deliveryplace not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - deliveryplace
    put:
      consumes:
      - multipart/form-data
      description: Update deliveryplace details by ID
      parameters:
      - description: DeliveryPlace ID
        in: path
        name: id
        required: true
        type: string
      - description: DeliveryPlace name
        in: formData
        name: name
        type: string
      - description: DeliveryPlace age
        in: formData
        name: age
        type: integer
      - description: DeliveryPlace image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_place.DeliveryPlaceResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: DeliveryPlace not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update deliveryplace
      tags:
      - deliveryplace
  /group/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all groups
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/group.GroupResponse'
            type: array
      summary: List of groups
      tags:
      - group
    post:
      consumes:
      - multipart/form-data
      description: Create a new group with the provided information
      parameters:
      - description: Group name
        in: formData
        name: name
        required: true
        type: string
      - description: Group age
        in: formData
        name: age
        required: true
        type: integer
      - description: Group image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/group.GroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create group
      tags:
      - group
  /group/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a group by its ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Group not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete group
      tags:
      - group
    get:
      consumes:
      - application/json
      description: Retrieve details of a group by its ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.GroupResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Group not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get group details
      tags:
      - group
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Group information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/group.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.GroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: group not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - group
    put:
      consumes:
      - multipart/form-data
      description: Update group details by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      - description: Group name
        in: formData
        name: name
        type: string
      - description: Group age
        in: formData
        name: age
        type: integer
      - description: Group image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.GroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Group not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update group
      tags:
      - group
  /group_hall/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all grouphalls
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/group_hall.GroupHallResponse'
            type: array
      summary: List of grouphalls
      tags:
      - grouphall
    post:
      consumes:
      - multipart/form-data
      description: Create a new grouphall with the provided information
      parameters:
      - description: GroupHall name
        in: formData
        name: name
        required: true
        type: string
      - description: GroupHall age
        in: formData
        name: age
        required: true
        type: integer
      - description: GroupHall image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/group_hall.GroupHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create grouphall
      tags:
      - grouphall
  /group_hall/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a grouphall by its ID
      parameters:
      - description: GroupHall ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: GroupHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete grouphall
      tags:
      - grouphall
    get:
      consumes:
      - application/json
      description: Retrieve details of a grouphall by its ID
      parameters:
      - description: GroupHall ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group_hall.GroupHallResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: GroupHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get grouphall details
      tags:
      - grouphall
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: GroupHall ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial GroupHall information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/group_hall.CreateGroupHallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group_hall.GroupHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: grouphall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - grouphall
    put:
      consumes:
      - multipart/form-data
      description: Update grouphall details by ID
      parameters:
      - description: GroupHall ID
        in: path
        name: id
        required: true
        type: string
      - description: GroupHall name
        in: formData
        name: name
        type: string
      - description: GroupHall age
        in: formData
        name: age
        type: integer
      - description: GroupHall image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group_hall.GroupHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: GroupHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update grouphall
      tags:
      - grouphall
  /hall_menu_group/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all hallmenugroups
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/hall_menu_group.HallMenuGroupResponse'
            type: array
      summary: List of hallmenugroups
      tags:
      - hallmenugroup
    post:
      consumes:
      - multipart/form-data
      description: Create a new hallmenugroup with the provided information
      parameters:
      - description: HallMenuGroup name
        in: formData
        name: name
        required: true
        type: string
      - description: HallMenuGroup age
        in: formData
        name: age
        required: true
        type: integer
      - description: HallMenuGroup image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/hall_menu_group.HallMenuGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create hallmenugroup
      tags:
      - hallmenugroup
  /hall_menu_group/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a hallmenugroup by its ID
      parameters:
      - description: HallMenuGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete hallmenugroup
      tags:
      - hallmenugroup
    get:
      consumes:
      - application/json
      description: Retrieve details of a hallmenugroup by its ID
      parameters:
      - description: HallMenuGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_group.HallMenuGroupResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get hallmenugroup details
      tags:
      - hallmenugroup
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: HallMenuGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial HallMenuGroup information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/hall_menu_group.CreateHallMenuGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_group.HallMenuGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: hallmenugroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - hallmenugroup
    put:
      consumes:
      - multipart/form-data
      description: Update hallmenugroup details by ID
      parameters:
      - description: HallMenuGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: HallMenuGroup name
        in: formData
        name: name
        type: string
      - description: HallMenuGroup age
        in: formData
        name: age
        type: integer
      - description: HallMenuGroup image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_group.HallMenuGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update hallmenugroup
      tags:
      - hallmenugroup
  /hall_menu_sub_group/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all hallmenusubgroups
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/hall_menu_sub_group.HallMenuSubGroupResponse'
            type: array
      summary: List of hallmenusubgroups
      tags:
      - hallmenusubgroup
    post:
      consumes:
      - multipart/form-data
      description: Create a new hallmenusubgroup with the provided information
      parameters:
      - description: HallMenuSubGroup name
        in: formData
        name: name
        required: true
        type: string
      - description: HallMenuSubGroup age
        in: formData
        name: age
        required: true
        type: integer
      - description: HallMenuSubGroup image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/hall_menu_sub_group.HallMenuSubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create hallmenusubgroup
      tags:
      - hallmenusubgroup
  /hall_menu_sub_group/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a hallmenusubgroup by its ID
      parameters:
      - description: HallMenuSubGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuSubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete hallmenusubgroup
      tags:
      - hallmenusubgroup
    get:
      consumes:
      - application/json
      description: Retrieve details of a hallmenusubgroup by its ID
      parameters:
      - description: HallMenuSubGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_sub_group.HallMenuSubGroupResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuSubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get hallmenusubgroup details
      tags:
      - hallmenusubgroup
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: HallMenuSubGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial HallMenuSubGroup information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/hall_menu_sub_group.CreateHallMenuSubGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_sub_group.HallMenuSubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: hallmenusubgroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - hallmenusubgroup
    put:
      consumes:
      - multipart/form-data
      description: Update hallmenusubgroup details by ID
      parameters:
      - description: HallMenuSubGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: HallMenuSubGroup name
        in: formData
        name: name
        type: string
      - description: HallMenuSubGroup age
        in: formData
        name: age
        type: integer
      - description: HallMenuSubGroup image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/hall_menu_sub_group.HallMenuSubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: HallMenuSubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update hallmenusubgroup
      tags:
      - hallmenusubgroup
  /main_group/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all maingroups
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main_group.MainGroupResponse'
            type: array
      summary: List of maingroups
      tags:
      - maingroup
    post:
      consumes:
      - multipart/form-data
      description: Create a new maingroup with the provided information
      parameters:
      - description: MainGroup name
        in: formData
        name: name
        required: true
        type: string
      - description: MainGroup age
        in: formData
        name: age
        required: true
        type: integer
      - description: MainGroup image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main_group.MainGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create maingroup
      tags:
      - maingroup
  /main_group/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a maingroup by its ID
      parameters:
      - description: MainGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MainGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete maingroup
      tags:
      - maingroup
    get:
      consumes:
      - application/json
      description: Retrieve details of a maingroup by its ID
      parameters:
      - description: MainGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main_group.MainGroupResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MainGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get maingroup details
      tags:
      - maingroup
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: MainGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial MainGroup information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/main_group.CreateMainGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main_group.MainGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: maingroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - maingroup
    put:
      consumes:
      - multipart/form-data
      description: Update maingroup details by ID
      parameters:
      - description: MainGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: MainGroup name
        in: formData
        name: name
        type: string
      - description: MainGroup age
        in: formData
        name: age
        type: integer
      - description: MainGroup image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main_group.MainGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MainGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update maingroup
      tags:
      - maingroup
  /manufacturers/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all manufacturerss
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/manufacturers.ManufacturersResponse'
            type: array
      summary: List of manufacturerss
      tags:
      - manufacturers
    post:
      consumes:
      - multipart/form-data
      description: Create a new manufacturers with the provided information
      parameters:
      - description: Manufacturers name
        in: formData
        name: name
        required: true
        type: string
      - description: Manufacturers age
        in: formData
        name: age
        required: true
        type: integer
      - description: Manufacturers image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/manufacturers.ManufacturersResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create manufacturers
      tags:
      - manufacturers
  /manufacturers/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a manufacturers by its ID
      parameters:
      - description: Manufacturers ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Manufacturers not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete manufacturers
      tags:
      - manufacturers
    get:
      consumes:
      - application/json
      description: Retrieve details of a manufacturers by its ID
      parameters:
      - description: Manufacturers ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manufacturers.ManufacturersResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Manufacturers not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get manufacturers details
      tags:
      - manufacturers
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Manufacturers ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Manufacturers information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/manufacturers.CreateManufacturersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manufacturers.ManufacturersResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: manufacturers not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - manufacturers
    put:
      consumes:
      - multipart/form-data
      description: Update manufacturers details by ID
      parameters:
      - description: Manufacturers ID
        in: path
        name: id
        required: true
        type: string
      - description: Manufacturers name
        in: formData
        name: name
        type: string
      - description: Manufacturers age
        in: formData
        name: age
        type: integer
      - description: Manufacturers image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manufacturers.ManufacturersResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Manufacturers not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update manufacturers
      tags:
      - manufacturers
  /measure_unit/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all measureunits
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/measure_unit.MeasureUnitResponse'
            type: array
      summary: List of measureunits
      tags:
      - measureunit
    post:
      consumes:
      - multipart/form-data
      description: Create a new measureunit with the provided information
      parameters:
      - description: MeasureUnit name
        in: formData
        name: name
        required: true
        type: string
      - description: MeasureUnit age
        in: formData
        name: age
        required: true
        type: integer
      - description: MeasureUnit image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/measure_unit.MeasureUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create measureunit
      tags:
      - measureunit
  /measure_unit/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a measureunit by its ID
      parameters:
      - description: MeasureUnit ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MeasureUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete measureunit
      tags:
      - measureunit
    get:
      consumes:
      - application/json
      description: Retrieve details of a measureunit by its ID
      parameters:
      - description: MeasureUnit ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measure_unit.MeasureUnitResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MeasureUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get measureunit details
      tags:
      - measureunit
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: MeasureUnit ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial MeasureUnit information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/measure_unit.CreateMeasureUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measure_unit.MeasureUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: measureunit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - measureunit
    put:
      consumes:
      - multipart/form-data
      description: Update measureunit details by ID
      parameters:
      - description: MeasureUnit ID
        in: path
        name: id
        required: true
        type: string
      - description: MeasureUnit name
        in: formData
        name: name
        type: string
      - description: MeasureUnit age
        in: formData
        name: age
        type: integer
      - description: MeasureUnit image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/measure_unit.MeasureUnitResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: MeasureUnit not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update measureunit
      tags:
      - measureunit
  /offer/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all offers
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/offer.OfferResponse'
            type: array
      summary: List of offers
      tags:
      - offer
    post:
      consumes:
      - multipart/form-data
      description: Create a new offer with the provided information
      parameters:
      - description: Offer name
        in: formData
        name: name
        required: true
        type: string
      - description: Offer age
        in: formData
        name: age
        required: true
        type: integer
      - description: Offer image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create offer
      tags:
      - offer
  /offer/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a offer by its ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete offer
      tags:
      - offer
    get:
      consumes:
      - application/json
      description: Retrieve details of a offer by its ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get offer details
      tags:
      - offer
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Offer information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/offer.CreateOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - offer
    put:
      consumes:
      - multipart/form-data
      description: Update offer details by ID
      parameters:
      - description: Offer ID
        in: path
        name: id
        required: true
        type: string
      - description: Offer name
        in: formData
        name: name
        type: string
      - description: Offer age
        in: formData
        name: age
        type: integer
      - description: Offer image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer.OfferResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Offer not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update offer
      tags:
      - offer
  /offer_mod/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all offermods
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/offer_mod.OfferModResponse'
            type: array
      summary: List of offermods
      tags:
      - offermod
    post:
      consumes:
      - multipart/form-data
      description: Create a new offermod with the provided information
      parameters:
      - description: OfferMod name
        in: formData
        name: name
        required: true
        type: string
      - description: OfferMod age
        in: formData
        name: age
        required: true
        type: integer
      - description: OfferMod image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/offer_mod.OfferModResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create offermod
      tags:
      - offermod
  /offer_mod/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a offermod by its ID
      parameters:
      - description: OfferMod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferMod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete offermod
      tags:
      - offermod
    get:
      consumes:
      - application/json
      description: Retrieve details of a offermod by its ID
      parameters:
      - description: OfferMod ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_mod.OfferModResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferMod not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get offermod details
      tags:
      - offermod
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: OfferMod ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial OfferMod information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/offer_mod.CreateOfferModRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_mod.OfferModResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: offermod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - offermod
    put:
      consumes:
      - multipart/form-data
      description: Update offermod details by ID
      parameters:
      - description: OfferMod ID
        in: path
        name: id
        required: true
        type: string
      - description: OfferMod name
        in: formData
        name: name
        type: string
      - description: OfferMod age
        in: formData
        name: age
        type: integer
      - description: OfferMod image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_mod.OfferModResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferMod not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update offermod
      tags:
      - offermod
  /offer_type/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all offertypes
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/offer_type.OfferTypeResponse'
            type: array
      summary: List of offertypes
      tags:
      - offertype
    post:
      consumes:
      - multipart/form-data
      description: Create a new offertype with the provided information
      parameters:
      - description: OfferType name
        in: formData
        name: name
        required: true
        type: string
      - description: OfferType age
        in: formData
        name: age
        required: true
        type: integer
      - description: OfferType image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/offer_type.OfferTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create offertype
      tags:
      - offertype
  /offer_type/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a offertype by its ID
      parameters:
      - description: OfferType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete offertype
      tags:
      - offertype
    get:
      consumes:
      - application/json
      description: Retrieve details of a offertype by its ID
      parameters:
      - description: OfferType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_type.OfferTypeResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferType not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get offertype details
      tags:
      - offertype
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: OfferType ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial OfferType information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/offer_type.CreateOfferTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_type.OfferTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: offertype not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - offertype
    put:
      consumes:
      - multipart/form-data
      description: Update offertype details by ID
      parameters:
      - description: OfferType ID
        in: path
        name: id
        required: true
        type: string
      - description: OfferType name
        in: formData
        name: name
        type: string
      - description: OfferType age
        in: formData
        name: age
        type: integer
      - description: OfferType image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/offer_type.OfferTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: OfferType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update offertype
      tags:
      - offertype
  /packaging_type/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all packagingtypes
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/packaging_type.PackagingTypeResponse'
            type: array
      summary: List of packagingtypes
      tags:
      - packagingtype
    post:
      consumes:
      - multipart/form-data
      description: Create a new packagingtype with the provided information
      parameters:
      - description: PackagingType name
        in: formData
        name: name
        required: true
        type: string
      - description: PackagingType age
        in: formData
        name: age
        required: true
        type: integer
      - description: PackagingType image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/packaging_type.PackagingTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create packagingtype
      tags:
      - packagingtype
  /packaging_type/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a packagingtype by its ID
      parameters:
      - description: PackagingType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: PackagingType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete packagingtype
      tags:
      - packagingtype
    get:
      consumes:
      - application/json
      description: Retrieve details of a packagingtype by its ID
      parameters:
      - description: PackagingType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/packaging_type.PackagingTypeResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: PackagingType not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get packagingtype details
      tags:
      - packagingtype
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: PackagingType ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial PackagingType information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/packaging_type.CreatePackagingTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/packaging_type.PackagingTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: packagingtype not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - packagingtype
    put:
      consumes:
      - multipart/form-data
      description: Update packagingtype details by ID
      parameters:
      - description: PackagingType ID
        in: path
        name: id
        required: true
        type: string
      - description: PackagingType name
        in: formData
        name: name
        type: string
      - description: PackagingType age
        in: formData
        name: age
        type: integer
      - description: PackagingType image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/packaging_type.PackagingTypeResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: PackagingType not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update packagingtype
      tags:
      - packagingtype
  /report/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all reports
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/report.ReportResponse'
            type: array
      summary: List of reports
      tags:
      - report
    post:
      consumes:
      - multipart/form-data
      description: Create a new report with the provided information
      parameters:
      - description: Report name
        in: formData
        name: name
        required: true
        type: string
      - description: Report age
        in: formData
        name: age
        required: true
        type: integer
      - description: Report image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/report.ReportResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create report
      tags:
      - report
  /report/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a report by its ID
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Report not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete report
      tags:
      - report
    get:
      consumes:
      - application/json
      description: Retrieve details of a report by its ID
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/report.ReportResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Report not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get report details
      tags:
      - report
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Report information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/report.CreateReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/report.ReportResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: report not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - report
    put:
      consumes:
      - multipart/form-data
      description: Update report details by ID
      parameters:
      - description: Report ID
        in: path
        name: id
        required: true
        type: string
      - description: Report name
        in: formData
        name: name
        type: string
      - description: Report age
        in: formData
        name: age
        type: integer
      - description: Report image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/report.ReportResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Report not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update report
      tags:
      - report
  /settlement/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all settlements
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/settlement.SettlementResponse'
            type: array
      summary: List of settlements
      tags:
      - settlement
    post:
      consumes:
      - multipart/form-data
      description: Create a new settlement with the provided information
      parameters:
      - description: Settlement name
        in: formData
        name: name
        required: true
        type: string
      - description: Settlement age
        in: formData
        name: age
        required: true
        type: integer
      - description: Settlement image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/settlement.SettlementResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create settlement
      tags:
      - settlement
  /settlement/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a settlement by its ID
      parameters:
      - description: Settlement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Settlement not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete settlement
      tags:
      - settlement
    get:
      consumes:
      - application/json
      description: Retrieve details of a settlement by its ID
      parameters:
      - description: Settlement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settlement.SettlementResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Settlement not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get settlement details
      tags:
      - settlement
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Settlement ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Settlement information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/settlement.CreateSettlementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settlement.SettlementResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: settlement not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - settlement
    put:
      consumes:
      - multipart/form-data
      description: Update settlement details by ID
      parameters:
      - description: Settlement ID
        in: path
        name: id
        required: true
        type: string
      - description: Settlement name
        in: formData
        name: name
        type: string
      - description: Settlement age
        in: formData
        name: age
        type: integer
      - description: Settlement image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settlement.SettlementResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Settlement not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update settlement
      tags:
      - settlement
  /sub_group/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all subgroups
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sub_group.SubGroupResponse'
            type: array
      summary: List of subgroups
      tags:
      - subgroup
    post:
      consumes:
      - multipart/form-data
      description: Create a new subgroup with the provided information
      parameters:
      - description: SubGroup name
        in: formData
        name: name
        required: true
        type: string
      - description: SubGroup age
        in: formData
        name: age
        required: true
        type: integer
      - description: SubGroup image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sub_group.SubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create subgroup
      tags:
      - subgroup
  /sub_group/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a subgroup by its ID
      parameters:
      - description: SubGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: SubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete subgroup
      tags:
      - subgroup
    get:
      consumes:
      - application/json
      description: Retrieve details of a subgroup by its ID
      parameters:
      - description: SubGroup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sub_group.SubGroupResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: SubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get subgroup details
      tags:
      - subgroup
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: SubGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial SubGroup information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/sub_group.CreateSubGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sub_group.SubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: subgroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - subgroup
    put:
      consumes:
      - multipart/form-data
      description: Update subgroup details by ID
      parameters:
      - description: SubGroup ID
        in: path
        name: id
        required: true
        type: string
      - description: SubGroup name
        in: formData
        name: name
        type: string
      - description: SubGroup age
        in: formData
        name: age
        type: integer
      - description: SubGroup image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sub_group.SubGroupResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: SubGroup not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update subgroup
      tags:
      - subgroup
  /supplier/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all suppliers
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/supplier.SupplierResponse'
            type: array
      summary: List of suppliers
      tags:
      - supplier
    post:
      consumes:
      - multipart/form-data
      description: Create a new supplier with the provided information
      parameters:
      - description: Supplier name
        in: formData
        name: name
        required: true
        type: string
      - description: Supplier age
        in: formData
        name: age
        required: true
        type: integer
      - description: Supplier image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/supplier.SupplierResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create supplier
      tags:
      - supplier
  /supplier/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a supplier by its ID
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Supplier not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete supplier
      tags:
      - supplier
    get:
      consumes:
      - application/json
      description: Retrieve details of a supplier by its ID
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/supplier.SupplierResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Supplier not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get supplier details
      tags:
      - supplier
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial Supplier information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/supplier.CreateSupplierRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/supplier.SupplierResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: supplier not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - supplier
    put:
      consumes:
      - multipart/form-data
      description: Update supplier details by ID
      parameters:
      - description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      - description: Supplier name
        in: formData
        name: name
        type: string
      - description: Supplier age
        in: formData
        name: age
        type: integer
      - description: Supplier image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/supplier.SupplierResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: Supplier not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update supplier
      tags:
      - supplier
  /trading_hall/api/v1/:
    get:
      consumes:
      - application/json
      description: Get all tradinghalls
      parameters:
      - description: Search by name
        in: query
        name: name
        type: string
      - description: Search by age
        in: query
        name: age
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/trading_hall.TradingHallResponse'
            type: array
      summary: List of tradinghalls
      tags:
      - tradinghall
    post:
      consumes:
      - multipart/form-data
      description: Create a new tradinghall with the provided information
      parameters:
      - description: TradingHall name
        in: formData
        name: name
        required: true
        type: string
      - description: TradingHall age
        in: formData
        name: age
        required: true
        type: integer
      - description: TradingHall image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/trading_hall.TradingHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Create tradinghall
      tags:
      - tradinghall
  /trading_hall/api/v1/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a tradinghall by its ID
      parameters:
      - description: TradingHall ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: TradingHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Delete tradinghall
      tags:
      - tradinghall
    get:
      consumes:
      - application/json
      description: Retrieve details of a tradinghall by its ID
      parameters:
      - description: TradingHall ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trading_hall.TradingHallResponse'
        "400":
          description: Invalid UUID format
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: TradingHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Get tradinghall details
      tags:
      - tradinghall
    patch:
      consumes:
      - application/json
      description: Update specific fields of a city by ID
      parameters:
      - description: TradingHall ID
        in: path
        name: id
        required: true
        type: string
      - description: Partial TradingHall information
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/trading_hall.CreateTradingHallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trading_hall.TradingHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: tradinghall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update city partially
      tags:
      - tradinghall
    put:
      consumes:
      - multipart/form-data
      description: Update tradinghall details by ID
      parameters:
      - description: TradingHall ID
        in: path
        name: id
        required: true
        type: string
      - description: TradingHall name
        in: formData
        name: name
        type: string
      - description: TradingHall age
        in: formData
        name: age
        type: integer
      - description: TradingHall image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trading_hall.TradingHallResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/basics.APIError'
        "404":
          description: TradingHall not found
          schema:
            $ref: '#/definitions/basics.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/basics.APIError'
      summary: Update tradinghall
      tags:
      - tradinghall
swagger: "2.0"
